class Point3D:
    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z

    def __str__(self):
        return "[x=%d,y=%d,z=%d]" % (self.x, self.y,self.z)

class Point3DController:
    # metoda do dodawania współrzędnych dwóch punktów
    def sumTwoPoints(self, p1, p2):
        # utworzenie nowego obiektu klasy Point3D
        newPoint = Point3D(p1.x + p2.x, p1.y + p2.y, p1.z+ p2.z)
        return newPoint

    def multiplyByValue(self, point, value):
        return Point3D(point.x * value, point.y * value, point.z * value)

    # metoda sumująca wszystkie skladowe punktów znajdujące się w liście
    # metoda przyjmuje jako argument listę punktów
    # metoda zwraca obiekt klasy Point3D

    def sumAllPoints(self, list):
        newx = 0
        newy = 0
        newz = 0
        for point in list:
            newx += point.x
            newy += point.y
            newz += point.z
        return Point3D(newx, newy, newz)

    # ta metoda robi to samo co poprzednia ale posługuje się obiektem zamiast zmiennych
    def sumAllPoints2(self, list):
        sumPoint = Point3D(0,0,0)
        # element listy to obiekt klasy Point3D
        for point in points:
            sumPoint.x += point.x
            sumPoint.y += point.y
            sumPoint.z += point.z
        return sumPoint

    # metoda wyszukująca punkt w liście po jego współrzędnych
    # metoda zwraca wartość typu bool - T/N
    def findPointOld(self, points, x, y, z):
        result = 1
        for point in points:
            if point.x == x and point.y == y and point.z == z:
                result = 1
        return result

    def findPoint(self, points, x, y, z):
        findPoint = Point3D(x,y,z)
        for point in points:
            if point.x == findPoint.x and point.y == findPoint.y and point.z == findPoint.z:
                return True
        return False

point1 = Point3D(0,0,0)
point2 = Point3D(5,5,5)

print("Point1", point1.x, point1.y, point1.z)
print(point1)
print(point2)

#metoda sumująca współrzędne obiektów klasy Point3D
pc = Point3DController()
pointSum = pc.sumTwoPoints(point1, point2)
print(pointSum)

pointMultiplied = pc.multiplyByValue(point2, 4)
print(pointMultiplied)
print(pc.multiplyByValue(Point3D(1,2,3), 0.5))

points = [Point3D(1,1,1), Point3D(2,2,2), Point3D(3,2,1), Point3D(0,5,11)]
print(pc.sumAllPoints(points))

points2 = [Point3D(1,1,1), Point3D(2,2,2), Point3D(3,2,1), Point3D(0,5,11), Point3D(4,6,22)]
print(pc.sumAllPoints2(points2))

print(pc.findPoint(points, 1,1,2))
print(pc.findPointOld(points, 2,2,2))

print("Nazwa klasy: ", point1.__class__.__name__)
print("Nazwa klasy: ", pc.__class__.__name__)
print("Nazwa klasy: ", pointMultiplied.__class__.__name__)
print("Nazwa klasy: ", points.__class__)
print("Typ obiektu: ", type(points))